version: 1
metadata:
  name: employee_setup
  labels:
    blueprints.goauthentik.io/instantiate: "true"

entries:
  # Benutzer john
  - model: authentik_core.user
    state: present
    identifiers: { username: john }
    attrs:
      username: john
      name: John Doe
      email: john@example.com
      is_active: true
      type: internal
      path: users

  # OIDC-Provider
  - model: authentik_providers_oauth2.oauth2provider
    state: present
    identifiers: { name: employee_api }
    attrs:
      name: employee_api
      client_id: employee_api_client
      client_type: public
      issuer_mode: per_provider
      include_claims_in_id_token: true
      access_token_validity: minutes=50
      refresh_token_validity: days=30
      access_code_validity: minutes=30
      authentication_flow: !Find [ authentik_flows.flow, [ slug, default-authentication-flow ] ]
      authorization_flow: !Find [ authentik_flows.flow, [ slug, default-provider-authorization-explicit-consent ] ]
      redirect_uris: |
        http://localhost:5173
        http://localhost:5173/callback
      property_mappings:
        - !Find [ authentik_providers_oauth2.scopemapping, [ scope_name, openid ] ]
        - !Find [ authentik_providers_oauth2.scopemapping, [ scope_name, email ] ]
        - !Find [ authentik_providers_oauth2.scopemapping, [ scope_name, profile ] ]
        - !Find [ authentik_providers_oauth2.scopemapping, [ scope_name, offline_access ] ]
      signing_key: !Find [ authentik_crypto.certificatekeypair, [ name, authentik Self-signed Certificate ] ]

  # Application, referenziert Provider via !Find (statt !Ref)
  - model: authentik_core.application
    state: present
    identifiers: { slug: employee_api }
    attrs:
      name: employee_api
      slug: employee_api
      provider: !Find [ authentik_providers_oauth2.oauth2provider, [ name, employee_api ] ]